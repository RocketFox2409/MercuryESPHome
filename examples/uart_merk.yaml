logger:
  level: VERY_VERBOSE
  baud_rate: 0

uart:
  id: uart_bus
  tx_pin: GPIO1
  rx_pin: GPIO3
  baud_rate: 9600

sensor:

  - platform: template
    id: Volts
    name: "${friendly_name} Volts"
    icon: "mdi:alpha-v-circle-outline"
    unit_of_measurement: "V"
    accuracy_decimals: 1
    lambda: "return {};"

  - platform: template
    id: Amps
    name: "${friendly_name} Amps"
    icon: "mdi:alpha-a-circle-outline"
    unit_of_measurement: "A"
    accuracy_decimals: 2
    lambda: "return {};"

  - platform: template
    id: Watts
    name: "${friendly_name} Watts"
    icon: "mdi:alpha-p-circle-outline"
    unit_of_measurement: "KWt*H"
    accuracy_decimals: 3
    lambda: "return {};"

  - platform: template
    id: Tariff1
    name: "${friendly_name} Tariff1"
    icon: "mdi:counter"
    unit_of_measurement: "KWt"
    accuracy_decimals: 2
    lambda: "return {};"

  - platform: template
    id: Tariff2
    name: "${friendly_name} Tariff2"
    icon: "mdi:counter"
    unit_of_measurement: "KWt"
    accuracy_decimals: 2
    lambda: "return {};"

  - platform: template
    id: Sum_Tariff
    name: "${friendly_name} Sum_Tariff"
    icon: "mdi:counter"
    unit_of_measurement: "KWt"
    accuracy_decimals: 2
    lambda: "return {};"

custom_component: 

  - lambda: |-
      auto my_mercury = new Mercury(id(uart_bus), id(Volts), id(Amps), id(Watts), id(Tariff1), id(Tariff2), id(Sum_Tariff));
      App.register_component(my_mercury);
      return {my_mercury};